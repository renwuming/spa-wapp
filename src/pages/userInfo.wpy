<style lang="less">
page {
  height: 100%;
}
.inner_container {
  display: flex;
  height: 100%;
  box-sizing: border-box;
  flex-direction: column;
  background-color: #f8a78e;
}

.list-wrapper {
  background-color: #fff;
  padding-left: 30rpx;
  margin-top: 30rpx;
}
.list-item {
  position: relative;
  display: flex;
  justify-content: space-between;
  align-items: center;
  box-sizing: border-box;
  width: 100%;
  height: 88rpx;
  padding-right: 74rpx;
  border-bottom: 1rpx solid #E5E5E5;
  .label {
    color: #000;
    flex-shrink: 0;
  }
  text, .get-phone-wrapper {
    font-size: 16px;
    color: #888;
    max-width: 500rpx;
    overflow: hidden;
    text-overflow:ellipsis;
    white-space: nowrap;
    font-weight: 300;
  }
  input {
    height:88rpx;
    line-height: 88rpx;
    font-weight: 300;
  }
  textarea {
    line-height: 88rpx;
    font-weight: 300;
  }
  .line {
    display: flex;
    width: 540rpx;
    align-items: center;
    .btn {
      width: 240rpx;
      text-align: center;
      line-height: 88rpx;
      color: #1AAD19;
      border-left: 1rpx solid #E5E5E5;
    }
  }
  .short {
    width: 300rpx;
  }
  .long {
    width: 466rpx;
  }
  image {
    position: absolute;
    right: 30rpx;
    width: 16rpx;
    height: 26rpx;
  }
  picker {
    .picker {
      width: 100%;
      height: 88rpx;
    }
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
  .get-phone-wrapper {
    position: relative;
    button {
      position: absolute;
      width: 100%;
      height: 100%;
      top: 0;
      left: 0;
      opacity:0;
      z-index:1000;
    }
  }
}
.list-item-high {
  align-items: flex-start!important;
  height: auto!important;
  .label {
    display: block;
    line-height: 88rpx;
  }
}

.confirm-btn {
  margin: 0 auto;
  margin-top: 60rpx;
  width: 670rpx;
  height: 94rpx;
  line-height: 94rpx;
  color: #fff;
  background-color: #1AAD19;
  border-radius: 10rpx;
  text-align: center;
  font-weight: 300;
}
.disabled {
  background-color: #8cd68c;
}

.btn-area {
  margin-top: 100rpx;
  padding: 0 30rpx;
  .btn {
    background-color: #44ba01;
    border: none;
    color: #fff;
    font-weight: 300;
  }
}

</style>

<template>

  <view class="inner_container">
    <view class="list-wrapper">
      <view class="list-item">
        <text class="label">昵称</text>
        <input class="long" bindinput="handleName" value="{{userInfo.name}}"/>
      </view>
      <view class="list-item" style="padding-right:0;">
        <text class="label">手机号码</text>
        <view class="line">
          <input class="short" type="number" bindinput="handlePhone" maxlength="11" value="{{userInfo.phoneNumber}}"/>
          <view class="btn get-phone-wrapper"><button open-type="getPhoneNumber" bindgetphonenumber="getPhoneNumber">授权</button>授权</view>
        </view>
      </view>
      <view class="list-item">
        <text class="label">性别</text>
        <text>{{genderList[userInfo.gender-1] || '请选择'}}</text>
        <image src="https://sec-cdn.static.xiaomi.net/secStatic/groups/miui-sec/rentianfu/spa-app/arrow.png"></image>
        <picker bindchange="bindGenderChange" value="{{userInfo.gender-1}}" range="{{genderList}}">
          <view class="picker"></view>
        </picker>
      </view>
      <view class="list-item list-item-high">
        <text class="label">地址</text>
        <textarea class="long" bindinput="handleAddress" type="number" value="{{userInfo.address}}"/>
      </view>
    </view>
    <view class="btn-area">
      <button @tap="submit" class="btn">提交</button>
    </view>
  </view>

</template>

<script>
  import wepy from 'wepy'
  import domTool from '../utils/domTool'
  import user from '../api/user'
  import auth from '../api/auth'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '填写信息'
    }

    components = {

    }

    data = {
      userInfo: {},
      genderList: ["男", "女"],
    }

    computed = {

    }

    methods = {
      async getPhoneNumber(e) {
        if (e.detail.errMsg == 'getPhoneNumber:ok') {
          const res = await user.addSecretUser(e.detail);
          this.userInfo.phoneNumber = res.data.phoneNumber;
          this.$apply();
        }
      },
      bindGenderChange(e) {
        this.userInfo.gender = +e.detail.value+1;
      },
      handleAddress(e) {
        this.userInfo.address = e.detail.value;
      },
      handleName(e) {
        this.userInfo.name = e.detail.value;
      },
      handlePhone(e) {
        this.userInfo.phoneNumber = e.detail.value;
      },
      async submit(e) {
        var source = this.userInfo;
        if(source.name.toString() == "" || source.address.toString() === "") {
          domTool.alert('请填写完整')
          return;
        }
        if(!/^1[3|4|5|7|8][0-9]{9}$/.test(source.phoneNumber)) {
          domTool.alert('手机号码有误')
          return;
        }

       let res = await user.updataUser({
         name: source.name,
         address: source.address,
         phoneNumber: source.phoneNumber,
         gender: source.gender,
       })
       if(res.ok===1) {
         domTool.success('修改成功！')
         // 更新storage
         var that = this;
         var data = this.$wxpage.options
         setTimeout(()=>{
           if(data.source) {
             that.setdata(['address','name','phoneNumber','gender'], [source.address, source.name, source.phoneNumber,source.gender])
             this.$redirect('detail', {id: data.id, date: data.date, time: data.time})
           } else {
             this.$switch('index', {})
           }
         },400)
       } else if(res.errMsg){

         await auth.doLogin()
         domTool.action('登录失效，请重新加载该页面')
       }
      },
    }

    setdata(arr1,arr2) {
      arr1.forEach((item,index)=>{
        wepy.setStorageSync(item, arr2[index])
      })
    }

    getData() {
      this.userInfo.name = wepy.getStorageSync('name')
      this.userInfo.gender =  wepy.getStorageSync('gender')
      this.userInfo.address =  wepy.getStorageSync('address')
      this.userInfo.phoneNumber =  wepy.getStorageSync('phoneNumber')
      this.$apply()
    }

    onLoad() {

    }

    onShow () {
      this.getData()
    }
  }
</script>
