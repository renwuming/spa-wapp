<style lang="less">
    .zan-btn {
        position: relative;
        color: #333;
        background-color: #fff;
        margin-bottom: 10px;
        font-size: 16px;
        line-height: 45px;
        height: 45px;
        box-sizing: border-box;
        text-decoration: none;
        text-align: center;
        vertical-align: middle;
        width: 100%;
        border-radius: 10rpx;
    }
    .zan-btn::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 200%;
        height: 200%;
        transform: scale(.5);
        transform-origin: 0 0;
        pointer-events: none;
        box-sizing: border-box;
        border: none;
    }
    .zan-btn--primary {
        color: #fff;
        background-image: linear-gradient(to left, #fc6c7e, #f8a88d);
        border: none;
    }

    .button-hover {
        opacity: .9
    }
    .zan-btn--loading::before {
        position: absolute;
        left: 50%;
        top: 50%;
        content: ' ';
        width: 16px;
        height: 16px;
        margin-left: -8px;
        margin-top: -8px;
        border: 3px solid #e5e5e5;
        border-color: #666 #e5e5e5 #e5e5e5 #e5e5e5;
        border-radius: 8px;
        box-sizing: border-box;
        animation: btn-spin .6s linear;
        animation-iteration-count: infinite
    }
    .container {
      padding: 25rpx;
    }
    .box {
        width: 100%;
        height: 250rpx;
        font-size: 60rpx;
        line-height: 300rpx;
        text-align: center;
        color: white;
        margin-bottom: 50rpx;
        background-image: linear-gradient(to left top, #fc6c7e, #f8a88d);
        border-top-left-radius: 50rpx;
        border-bottom-right-radius: 50rpx;
        display: flex;
        align-items: center;
        .ye-text {
          margin-left: 120rpx;
        }
    }
  .userinfo {
    position: absolute;
    top: 20rpx;
    left: 20rpx;
  }
  .userinfo-avatar {
    width: 160rpx;
    height: 160rpx;
    border-radius: 50%;
    border: 1px solid #e4e4e4;
  }
  .userinfo-nickname {
    margin-top: 5rpx;
    color: #5e5e5e;
  }
  .recharge-box {
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 10rpx;
    border: 1rpx solid #e4e4e4;
    text {
      color: #666;
      line-height: 80rpx;
    }
    input {
      color: #fc6c7e;
      margin-left: 30rpx;
      width: 340rpx;
      font-size: 20px;
      line-height: 80rpx;
      font-weight: bold;
    }
  }
</style>

<template>
  <view class="container">
     <view class="box">
        <view class="ye-text"><text style="font-size:16px;">余额</text> {{showYe}}</view>
     </view>
     <button class="zan-btn zan-btn--primary" @tap="pay3000">充值 3000 送 200</button>
     <button class="zan-btn zan-btn--primary" @tap="payAny">充值任意金额</button>
  </view>
  <modal hidden="{{hideModalPay}}" title="会员卡充值" bindcancel="cancelModal" bindconfirm="payTheValue">
    <view class="pay-box-wrapper">
      <view class="recharge-box">
        <text>充值金额</text>
        <input class="long" maxlength="5" bindinput="handlePayValue" type="number" value="{{payValue}}"/>
      </view>
    </view>
  </modal>
</template>

<script>
  import wepy from 'wepy'
  import order from '../api/order'
  import domTool from '../utils/domTool'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '我的余额'
    }

    components = {

    }

    data = {
      userInfo: '',
      ye: '',
      hideModalPay: true,
      payValue: '',
    }

    computed = {
      showYe() {
        const res = parseFloat(this.ye).toFixed(2);
        return isNaN(res) ? '-' : res;
      }
    }

    methods = {
      cancelModal() {
        this.hideModalPay = true;
      },
      async pay3000() {
        this.pay(3000);
      },
      async payAny() {
        this.hideModalPay = false;
      },
      payTheValue() {
        this.pay(+this.payValue);
        this.hideModalPay = true;
        this.payValue = '';
      },
      handlePayValue(e) {
        this.payValue = e.detail.value;
      },
    }

    async pay(value) {
      let data = {
        orderTime: new Date().toLocaleString(),
        createTime: new Date().toLocaleString(),
        orderStatus: true,
        server: "recharge",
        price: value,
        name: wepy.getStorageSync('name'),
        phoneNumber: wepy.getStorageSync('phoneNumber'),
        address: wepy.getStorageSync('address'),
      };
      const resdata = await order.createOrder(data);
      if(resdata.success) {
        this.callPay(resdata.jsPay);
      }
    }

    callPay(jsPay) {
      wx.requestPayment({...jsPay, success: (errMsg) => {
        domTool.success('充值成功')
        setTimeout(()=>{
         this.$switch('index', {})
        },0)
      }});
    }


    getData() {
      this.ye = wepy.getStorageSync('ye')
    }

    onLoad() {

    }

    onShow () {
      this.getData()
    }
  }
</script>
